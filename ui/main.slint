import { SpinBox, Button, CheckBox, Slider, LineEdit, ScrollView, ListView,
    HorizontalBox, VerticalBox, GridBox, StandardButton } from "std-widgets.slint";

export struct Repository {
  name: string,
  full_name: string,
  url: string,
  html_url: string,
}

export struct Subject {
  title: string,
  url: string,
  latest_comment_url: string,
  type_: string,
}

export struct Notification {
  id: string,
  unread: bool,
  reason: string,
  subject: Subject,
  repository: Repository,
  url: string,
}

component MainWindow inherits Window {
    title: "GH Notifications";
    in property <[Notification]> notifications-model: [];

    preferred-width: 600px;
    preferred-height: 800px;

    callback open-link(string);
    callback mark-read(string);
    callback mark-done(string);

    in-out property <bool> unread-only: true;
    callback apply-filter();

    VerticalBox {
      CheckBox {
        text: "Show unread only";
        checked <=> unread-only;
        toggled => { apply-filter(); }
      }

        ListView {
            for n[index] in root.notifications-model:  HorizontalLayout {
              HorizontalBox {
                HorizontalBox {
                  VerticalBox {

                    Text {
                        text: n.repository.full_name;
                    }

                    Text {
                        text: n.subject.title;
                    }
                  }

                  Text {
                    text: n.reason + " " + n.subject.type_;
                  }
                }

                Button {
                  text: "Go";
                  width: 50px;
                  clicked => { open-link(index); }
                }

                Button {
                  text: "âˆš";
                  visible: n.unread;
                  width: 50px;
                  clicked => { mark-done(n.id); }
                }
              }
            }
        }
    }
}
